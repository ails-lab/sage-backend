@prefix rr:    <http://www.w3.org/ns/r2rml#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix http: 	<http://www.w3.org/2011/http#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix oa: <http://www.w3.org/ns/oa#> .
@prefix as: <https://www.w3.org/ns/activitystreams#> .
@prefix dcterms: <http://purl.org/dc/terms/> .

@prefix dr:   <http://islab.ntua.gr/ns/d2rml#> .
@prefix op:  <http://islab.ntua.gr/ns/d2rml-op#> .
@prefix is:  <http://islab.ntua.gr/ns/d2rml-is#> .
@prefix cnt: <http://www.w3.org/2011/content#> .

@prefix collection: <{##ppRESOURCE_PREFIX##}>
@prefix model: <http://sw.islab.ntua.gr/semaspace/model/>

<#SPARQLEndpoint>
   a is:SPARQLService ;
   is:uri "{@@iirdfsource@@}" .
   
<#AIDAService>
   a is:HTTPSource ;
   is:request [ 
      http:absoluteURI "https://gate.d5.mpi-inf.mpg.de/aida/service/disambiguate" ;
      http:methodName "POST" ;
      http:headers ( [ http:fieldName "Content-Type" ;
                       http:fieldValue "application/json" ; ] ) ;
      http:body [ a cnt:ContentAsText ;
                  cnt:chars "{\"text\" : \"{@@text@@}\" }" ; ] ;
   ] ;
   is:parameters ( [ 
      a is:DataVariable;
      is:name "text" ;
   ] ) .
   
<#AIDAMapping>
   dr:logicalSource [ 
      dr:source <#AIDAService> ;
      dr:iterator "$";
	  dr:referenceFormulation is:JSONPath;
   ] ;
   dr:parameterBinding [ 
      dr:parameter "text" ;
      rr:column "{##ppLEXICAL-VALUE##}" ;
      dr:escapeType dr:EscapeJSON ;
   ] .	
   
<#AIDAMapping2>
   dr:logicalSource [ 
      dr:source [
         a is:FileSource ;
         is:string "{@@string@@}" ;
         is:parameter [ 
            a is:DataVariable;
            is:name "string" ;
         ] ;
      ] ;
      dr:iterator "$.mentions";
	  dr:referenceFormulation is:JSONPath;
   ] ;
   dr:parameterBinding [ 
      dr:parameter "string" ;
      rr:column "$" ;
      dr:transformationReference <#AIDAMapping> ;
   ] .  
   
<#EntityLookupTransformation>  
   rr:logicalTable [ 
      dr:source <#SPARQLEndpoint> ;
      dr:sparqlQuery "SELECT ?id {@@iigraph@@} WHERE { ?id {@@iiproperty@@} {@@literal@@} }" ;
   ] ;
   dr:parameterBinding [ 
      dr:parameter "iirdfsource" ;
      rr:constant "{@@iirdfsource@@}" ;
   ] ;
   dr:parameterBinding [ 
      dr:parameter "literal" ;
      rr:column "literal" ;
      dr:valueType rr:Literal ;
      dr:escapeType dr:EscapeSpecial ;
   ] ;
   dr:parameterBinding [ 
      dr:parameter "iigraph" ;
      rr:constant "{@@iigraph@@}" ;
   ] ;   
   dr:parameterBinding [ 
      dr:parameter "iiproperty" ;
      rr:constant "{@@iiproperty@@}" ;
   ] .    
      
<#ExecuteSpecification>
   a dr:D2RMLSpecification ;
   dr:logicalDatasets ( <#EnrichMapping> ) .
         
<#EnrichMapping>  
   a  <http://islab.ntua.gr/ns/d2rml#PrimaryTriplesMap> ;
   rr:logicalTable [ 
      dr:source <#SPARQLEndpoint> ;
      dr:sparqlQuery "SELECT DISTINCT ?literal ?lexicalValue ?language {@@iigraph@@} WHERE { ?id {@@iiproperty@@} ?literal . FILTER (isLiteral(?literal)) . BIND(STR(?literal) AS ?lexicalValue) . BIND(LANG(?literal) AS ?language) }" ;      
	  is:parameters ( [ 
         a is:ExternalVariable;
         is:name "iigraph" ;
      ] [ 
         a is:ExternalVariable;
         is:name "iiproperty" ;
      ] ) ;
   ] ;
   dr:transformations ( <#AIDAMapping> <#AIDAMapping2> <#EntityLookupTransformation> ) ;
   dr:pivots ( [ 
      dr:transformationReference <#AIDAMapping2> ;
   ] [
      dr:transformationReference <#EntityLookupTransformation> ;
   ] ) ;
   {##ppPREPROCESS##}
   rr:subjectMap [ 
      dr:definedColumn [
         dr:name "UUID" ;
         dr:function op:uuid ; 
      ] ;
      rr:template  "{@collection}{UUID}" ;
      rr:class oa:Annotation ;
      rr:class model:TermAnnotation ;
      dr:condition [
         rr:column "$.bestEntity";
         dr:transformationReference <#AIDAMapping2> ;
      	 op:matches "\\S+";
      ] ;
   ] ;
   rr:predicateObjectMap [ 
      rr:predicate as:generator ;
      rr:objectMap [
         rr:constant "{@@iiannotator@@}" ; 
         rr:termType rr:IRI ;
      ] ;
   ] ;
   rr:predicateObjectMap [ 
      rr:predicate dcterms:created ;
      rr:objectMap [
         dr:definedColumns ( [
            dr:name "TIME" ;
            dr:function op:currentTime; 
         ] );          
         rr:column "TIME";
         rr:datatype xsd:dateTime ;
         rr:termType rr:Literal ;
      ]
   ] ;     
   rr:predicateObjectMap [ 
      rr:predicate oa:hasTarget ;
      rr:objectMap  [ 
	     rr:parentTriplesMap [
		   rr:subjectMap [
			  rr:termType rr:BlankNode;
		   ] ;
		   rr:predicateObjectMap [
		      rr:predicate oa:hasSource ;
			  rr:objectMap [
			     rr:column "id" ;
			     dr:transformationReference <#EntityLookupTransformation> ;
			  ] ;
		   ] ;
		   rr:predicateObjectMap [
		      rr:predicate <http://sw.islab.ntua.gr/annotation/onProperty> ;
			  rr:objectMap [
			     rr:constant "{@@iiproperty@@}" ;
				 rr:termType rr:Literal ;
			  ] ;
		   ] ;
		   rr:predicateObjectMap [
		      rr:predicate <http://sw.islab.ntua.gr/annotation/onValue> ;
			  rr:objectMap [
			     rr:column "literal" ;
				 rr:termType rr:Literal;
			  ] ;
		   ] ;
		   rr:predicateObjectMap [
		      rr:predicate oa:start ;
			  rr:objectMap [
                 rr:column "$.offset";
                 dr:transformationReference <#AIDAMapping2> ;
				 rr:datatype xsd:nonNegativeInteger;
			  ] ;
		   ] ;
		   rr:predicateObjectMap [
		      rr:predicate oa:end ;
			  rr:objectMap [
			     dr:definedColumn [
                    dr:name "END" ;
                    dr:function op:mathExpressionEvaluate ; 
                    dr:parameterBinding [ 
                       dr:parameter "expression" ;
                       rr:constant "_x0 + _x1";
                    ] ;                    
                    dr:parameterBinding [ 
                       dr:parameter "_x0" ;
                       rr:column "$.offset";
                       dr:transformationReference <#AIDAMapping2> ;
                    ] ;
                    dr:parameterBinding [ 
                       dr:parameter "_x1" ;
                       rr:column "$.length";
                       dr:transformationReference <#AIDAMapping2> ;
                    ] ;
                    dr:parameterBinding [ 
                       dr:parameter "datatype" ;
                       rr:constant xsd:integer;
                    ] ;
                 ] ;
                 rr:column "END";
				 rr:datatype xsd:nonNegativeInteger;
			  ] ;
		   ] ;
		];
	 ];
   ] ;   
   rr:predicateObjectMap [ 
      rr:predicate  <http://sw.islab.ntua.gr/annotation/score> ;
	  rr:objectMap [
         rr:column "$.bestEntity.disambiguationScore";
         dr:transformationReference <#AIDAMapping2> ;
         rr:datatype xsd:double;
      ] ;
   ] ;   
   rr:predicateObjectMap [ 
      rr:predicate  oa:hasBody ;
	  rr:objectMap [
	     dr:definedColumn [
            dr:name "URL" ;
            dr:function op:jsonPathEvaluate ; 
            dr:parameterBinding [ 
               dr:parameter "input" ;
               rr:column "$.entityMetadata";
               dr:transformationReference <#AIDAMapping> ;
               dr:valueType dr:JSONObject ;
            ] ;
            dr:parameterBinding [
               dr:parameter "jsonPath" ; 
               rr:template "$['{$.bestEntity.kbIdentifier}'].url";
               dr:transformationReference <#AIDAMapping2> ;
           ] ;
         ] ;   
         rr:column "URL";
      ] ;
   ] .

