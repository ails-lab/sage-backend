@prefix rr:    <http://www.w3.org/ns/r2rml#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix http: 	<http://www.w3.org/2011/http#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix oa: <http://www.w3.org/ns/oa#> .
@prefix as: <https://www.w3.org/ns/activitystreams#> .
@prefix dcterms: <http://purl.org/dc/terms/> .

@prefix dr:   <http://islab.ntua.gr/ns/d2rml#> .
@prefix drop:  <http://islab.ntua.gr/ns/d2rml-op#> .
@prefix dris:  <http://islab.ntua.gr/ns/d2rml-is#> .
@prefix cnt: <http://www.w3.org/2011/content#> .

@prefix collection: <{##ppRESOURCE_PREFIX##}>

@prefix cc: <http://sw.islab.ntua.gr/cluster/>

<#ExecuteSpecification>
   a dr:D2RMLSpecification ;
   dr:logicalDatasets ( 
                        <#ClusterMapping> 
                      ) .


<#DataSource>
   a dris:StringSource ;
   dris:string "{@@iiclusterjson@@}" .
  
   
<#ClusterMapping>  
   dr:logicalArray [ 
      a dr:JSONItemArray ;
      dr:source <#DataSource> ;
      dr:iterator "$";
   ] ;

   dr:definedColumn [
      dr:name "MAIN_UUID" ;
      dr:function drop:uuid ; 
   ] ; 
   
   dr:definedKey [
      dr:name "MAIN_CLUSTER_URI" ;
      rr:template  "{@collection}{MAIN_UUID}" ;  
      dr:parameterBindings ( [ 
         dr:parameter "name" ;
         rr:constant "cluster" ;
      ] ) ;
   ] ;

   dr:definedColumn [
      dr:name "UUID" ;
      dr:function drop:uuid ; 
   ] ;   
   
   dr:triplesMaps ( [
   
      rr:subjectMap [ 
         rr:template  "{@collection}{UUID}" ;
         rr:class cc:Cluster ;
      ] ;
   
      rr:predicateObjectMap [ 
         rr:predicate cc:size ;
         rr:objectMap [
            rr:column "$.size" ; 
            rr:datatype xsd:integer ;
         ] ;
      ] ;
      
      rr:predicateObjectMap [
         rr:predicate cc:level ;
         rr:objectMap [
            rr:constant  2 ; 
            rr:datatype xsd:integer ;
         ] ;            
      ] ;      
   
      rr:predicateObjectMap [
         dr:iterator "$.partition" ;
       
         rr:predicate cc:partition ;
         rr:objectMap [
            rr:parentTriplesMap [
               rr:subjectMap [
                  rr:template  "{@cc}{UUID}/{[%order%]##2}" ;
                  rr:class cc:Cluster ;
               ] ;
            
               rr:predicateObjectMap [
                  rr:predicate cc:size ;
                  rr:objectMap [
                     rr:column "$.size" ; 
                     rr:datatype xsd:integer ;
                  ] ;            
              ] ;
              
               rr:predicateObjectMap [
                  rr:predicate cc:level ;
                  rr:objectMap [
                     rr:constant  3 ; 
                     rr:datatype xsd:integer ;
                  ] ;            
              ] ;                  
           
              rr:predicateObjectMap [
                 rr:predicate cc:member ;
                 rr:objectMap [
                    rr:column "$.members" ; 
                    rr:termType rr:IRI ;
                 ] ;            
              ] ;
           
              rr:predicateObjectMap [
                 dr:iterator "$.properties" ;

                 rr:predicate cc:properties ;
                 rr:objectMap [
                    rr:parentTriplesMap [
                       rr:subjectMap [
                          rr:termType rr:BlankNode ;
                      ] ;
                  
                      rr:predicateObjectMap [ 
                         rr:predicate cc:property ;
                         rr:objectMap [
                            rr:column "$.property" ; 
                            rr:termType rr:IRI ;
                         ] ;
                      ] ;
                   
                      rr:predicateObjectMap [ 
                         rr:predicate cc:value ;
                         rr:objectMap [
                            rr:column "$.value" ; 
                            rr:termType rr:Literal ;
                         ] ;
                      ] ;
                   ] ;                   
                ] ;            
             ] ;
           ] ;
        ] ;
     ] ;
   ] [
      rr:subjectMap [ 
         rr:column  "MAIN_CLUSTER_URI" ;  
         dr:condition [ 
            dr:onDefinedKey "MAIN_CLUSTER_URI" ;
            dr:isFresh true ;
         ] ;
         rr:class cc:Cluster ;
      ] ;   

      rr:predicateObjectMap [
         rr:predicate cc:level ;
         rr:objectMap [
            rr:constant  1 ; 
            rr:datatype xsd:integer ;
         ] ;            
      ] ;
            
      rr:predicateObjectMap [ 
         rr:predicate cc:size ;
         rr:objectMap [
            rr:constant "{@@iiclustersize@@}" ; 
            rr:datatype xsd:integer ;
         ] ;
      ] ;
                  
      rr:predicateObjectMap [
         rr:predicate cc:partition ;
         rr:objectMap [
            rr:template  "{@collection}{UUID}" ; 
            rr:termType rr:IRI ;
         ] ;            
      ] ;
      
   ] [
      rr:subjectMap [ 
         rr:column  "MAIN_CLUSTER_URI" ;  
         dr:condition [ 
            dr:onDefinedKey "MAIN_CLUSTER_URI" ;
            dr:isFresh false ;
         ] ;
      ] ;   
      
      rr:predicateObjectMap [
         rr:predicate cc:partition ;
         rr:objectMap [
            rr:template  "{@collection}{UUID}" ; 
            rr:termType rr:IRI ;
         ] ;            
      ] ;
      
   ] ) .

