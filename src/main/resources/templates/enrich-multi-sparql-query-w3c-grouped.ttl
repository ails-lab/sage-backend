@prefix rr:    <http://www.w3.org/ns/r2rml#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix http: 	<http://www.w3.org/2011/http#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix oa: <http://www.w3.org/ns/oa#> .
@prefix as: <https://www.w3.org/ns/activitystreams#> .
@prefix dcterms: <http://purl.org/dc/terms/> .

@prefix dr:   <http://islab.ntua.gr/ns/d2rml#> .
@prefix drop:  <http://islab.ntua.gr/ns/d2rml-op#> .
@prefix dris:  <http://islab.ntua.gr/ns/d2rml-is#> .

@prefix collection: <{##ppRESOURCE_PREFIX##}>

@prefix model: <http://sw.islab.ntua.gr/semaspace/model/>

<#SPARQLEndpoint>
   a dris:SPARQLEndpoint ;
   dris:uri "{@@iirdfsource@@}" .
   
<#RemoteSPARQLEndpoint>
   a dris:SPARQLEndpoint ;
   dris:uri "{@@endpoint@@}" .
   
<#SPARQLTransformation>
   rr:logicalTable [ 
      dr:source <#RemoteSPARQLEndpoint> ;
      dr:sparqlQuery "{@@query@@}" ;   
   ] .
   
<#EntityLookupTransformation>  
   rr:logicalTable [ 
      dr:source <#SPARQLEndpoint> ;
      dr:sparqlQuery "SELECT DISTINCT ?id {@@iigraph@@} WHERE { {@@iiwhere@@} {@@iivalues@@} BIND(?c_0 AS ?id) }" ;
   ] .
   
<#ExecuteSpecification>
   a dr:D2RMLSpecification ;
   dr:logicalDatasets ( <#EnrichMapping> ) .
   
<#EnrichMapping>  
   a  <http://islab.ntua.gr/ns/d2rml#PrimaryTriplesMap> ;
   rr:logicalTable [ 
      dr:source <#SPARQLEndpoint> ;
      dr:sparqlQuery "SELECT DISTINCT {@@iivariables@@} {@@iigraph@@} WHERE  { {@@iiwhere@@} {@@iifilters@@} }" ;
	  dris:parameters ( [ 
         a dris:ExternalVariable;
         dris:name "iigraph" ;
      ] [ 
         a dris:ExternalVariable;
         dris:name "iivariables" ;
      ] [ 
         a dris:ExternalVariable;
         dris:name "iiwhere" ;
      ] [ 
         a dris:ExternalVariable;
         dris:name "iifilters" ;
      ]) ;
#      dr:limit 100;
   ] ;
   dr:transformations ( 
   [
      dr:dataref <#SPARQLTransformation> ;
      dr:name "SPARQLTransformation";   
      dr:parameterBinding [ 
         dr:parameter "endpoint" ;
         rr:constant "{@@endpoint@@}" ;
      ] ;
      dr:parameterBinding [ 
         dr:parameter "query" ;
         rr:constant "{@@sparql-query@@}" ;
      ] ;
      
{##ppPREPROCESS_QUERY_BINDINGS##}

   ] 
   [
      dr:dataref <#EntityLookupTransformation> ;
      dr:name "EntityLookupTransformation";
      dr:parameterBinding [ 
         dr:parameter "iirdfsource" ;
         rr:constant "{@@iirdfsource@@}" ;
      ] ;
      dr:parameterBinding [ 
         dr:parameter "iigraph" ;
         rr:constant "{@@iigraph@@}" ;
      ] ;   
      dr:parameterBinding [ 
         dr:parameter "iiwhere" ;
         rr:constant "{@@iiwhere@@}" ;
      ] ;
      dr:parameterBinding [ 
         dr:parameter "iiwhere" ;
         rr:constant "{@@iivalues@@}" ;
      ] ;

{##ppPREPROCESS_UNGROUP_BINDINGS##}     
 
   ]
   ) ;   
   
   dr:pivots ( [ 
      rr:column "SPARQLTransformation~~" ;
   ] [
      rr:column "EntityLookupTransformation~~" ;
   ] ) ; 
      
{##ppPREPROCESS##}
   
   rr:subjectMap [ 
      dr:definedColumns ( [
         dr:name "UUID" ;
         dr:function drop:uuid ; 
      ] );
      rr:template  "{@collection}{UUID}" ;
      rr:class oa:Annotation ;
      rr:class model:TermAnnotation ;
   ] ;
   rr:predicateObjectMap [ 
      rr:predicate as:generator ;
      rr:objectMap [
         rr:constant "{@@iiannotator@@}" ; 
         rr:termType rr:IRI ;
      ] ;
   ] ;
   rr:predicateObjectMap [ 
      rr:predicate dcterms:created ;
      rr:objectMap [
         dr:definedColumns ( [
            dr:name "TIME" ;
            dr:function drop:currentTime; 
         ] );          
         rr:column "TIME";
         rr:datatype xsd:dateTime ;
         rr:termType rr:Literal ;
      ]
   ] ;     
   rr:predicateObjectMap [ 
      rr:predicate oa:hasTarget ;
      rr:objectMap  [ 
	     rr:parentTriplesMap [
		   rr:subjectMap [
			  rr:termType rr:BlankNode;
		   ] ;
		   rr:predicateObjectMap [
		      rr:predicate oa:hasSource ;
			  rr:objectMap [
			     rr:column "EntityLookupTransformation~~id" ;
			  ] ;
		   ] ;
           rr:predicateObjectMap [
              rr:predicate <http://sw.islab.ntua.gr/annotation/onGraphTree> ;
              rr:objectMap [
                 rr:constant "{@@iinosourcewhere@@}" ;
                 rr:termType rr:Literal ;
              ] ;
           ] ;         

{##ppPREPROCESS_VALUE_BINDINGS##}   

		];
	 ];
   ] ;
   rr:predicateObjectMap [ 
      rr:predicate  oa:hasBody ;
	  rr:objectMap [
         rr:column "SPARQLTransformation~~uri";
      ] ;
   ] ;
   rr:predicateObjectMap [ 
      rr:predicate  <http://sw.islab.ntua.gr/annotation/score> ;
	  rr:objectMap [
         rr:column "SPARQLTransformation~~score";
         rr:datatype xsd:double;
      ] ;
   ] .

